<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

  <display-name>Archetype Created Web Application</display-name>

  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--原生的redis中session过滤器重置session的生存时间-->
  <filter>
    <filter-name>SessionExpireFilter</filter-name>
    <filter-class>com.mmall.controller.common.SessionExpireFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>SessionExpireFilter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>

  <!--springSession框架使用的重置session生存时间的内置过滤器,此时要在代码中继续使用session也即是未改变之前springSession的原生框架，不会对业务代码具有侵入性-->
  <!--<filter>-->
    <!--<filter-name>springSessionRepositoryFilter</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
  <!--</filter>-->
  <!--<filter-mapping>-->
    <!--<filter-name>springSessionRepositoryFilter</filter-name>-->
    <!--<url-pattern>*.do</url-pattern>-->
  <!--</filter-mapping>-->


  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!--web容器和spring容器整合的监听器，通过此listener加载applicationContext配置文件，整合spring-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:applicationContext.xml
    </param-value>
  </context-param>

  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--下面注释可以修改springMVC配置文件的具体路径和自定义名字，也是默认值-->
    <!--<init-param>-->
      <!--<param-name>contextConfigLocation</param-name>-->
      <!--<param-value>/WEB-INF/dispatcher-servlet.xml</param-value>-->
    <!--</init-param>-->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!--*.do的路径都会被springMvc拦截，1代表优先级启动顺序-->
  <!--<servlet-mapping>-->
    <!--<servlet-name>dispatcher</servlet-name>-->
    <!--<url-pattern>*.do</url-pattern>-->
  <!--</servlet-mapping>-->

  <!--这里进行了RESTful改造。改为/拦截所有的资源请求，如果用了*.do则在路径中不写.do也可以映射到对应的RequestMapping-->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>




</web-app>

